#!/usr/bin/ksh
################################################################################
#
# Written by : Kevin Lee - USS, Associate System Programmer 
# Date   : 09/28/99
# Modified: 02/03/2000
# Last Modified: 02/12/2001
# 	Ryan Dang: 	05/08/07
# Description: This scripts run weekly to collect the server and client list
#              and also checking for the result of the backup
################################################################################

function variables_init
{

DATA_WEB_LOG_DIR=/data/WEB/docs_private/uds_internal/pp/sysback/logs
# Define the new log file name.
LOGFILE=$DATA_WEB_LOG_DIR/clntsrv.kshlog
# Kill any [old] processes
if [ -f $LOGFILE ]; then
        fuser -k $LOGFILE
fi
# Empty the log file.
cat /dev/null > $LOGFILE


SYSB_SERVERS="ktazp131 ktazp1560 ktazd2750 ktazp95 ktazp8001 fig ktazp2776 ktazd216"
CLIENT_LIST=/usr/local/scripts/cfgtable
RESULT_LOG=/usr/local/scripts/sysback/result.out
htfile=/usr/local/scripts/sysback/result.html
ffile=/usr/local/scripts/sysback/failed.out
htffile=/usr/local/scripts/sysback/failed.html
pfile=/usr/local/scripts/sysback/pingable.out
userid=ossadmin
password=Ets0ss
part0='<tr>'
part1='<td>'
part2='</td>'
part3='</tr><tr>'
part4='<td><a href="/uds_internal/pp/sysback/logs/'
part5='">View Log</a></td>'
part6='">View Archive</a></td>'
part7='">Restore Image</a></td>'

((scount=0))  # backup success counter
((fcount=0))  # backup fail counter
((ncount=0))  # client does not setup for backup
((tcount=0))  # backup server total
((ucount=0))  # unkown system counter

}

function create_html
{
	for P in $RESULT_LOG $htfile $ffile $htffile $pfile
	do	
		if [ -f $P ]; then
			rm -f $P
			touch $P
		fi
	done

	# create the html file header
	print "<HTML>" >> $htfile
	print "<HEAD>" >> $htfile
	print "<TITLE>Sysback Server/Client and Result List For AIX/UNIX Servers</TITLE>" >> $htfile 
	print "</HEAD>" >> $htfile
	print "<BODY BGCOLOR=#FEFEEF TEXT=#000000 LINK=#0000FF VLINK=#000080 ALINK=#FF0000>" >> $htfile
	print "<H1><FONT face=verdana,arial,helvetica size=+1>SYSBACK Client/Server and Result List</FONT></H1>" >> $htfile
	print "<p><FONT face="arial,helvetica" size=2>DATE: `date` </FONT>" >> $htfile
	print "<br><FONT face=arial,helvetica size=2>Generated by ktazd216:$0 </FONT>" >> $htfile
	print "<HR>" >> $htfile
	
	# Create the "failed" html header
	print "<HTML>" >> $htffile
	print "<HEAD>" >> $htffile
	print "<TITLE>Sysback Client/Server and Result For AIX/UNIX Servers</TITLE>" >> $htffile
	print "</HEAD>" >> $htffile
	print "<BODY BGCOLOR=#FEFEEF TEXT=#000000 LINK=#0000FF VLINK=#000080 ALINK=#FF0000>" >> $htffile
	print "<H1><FONT face=verdana,arial,helvetica size=+1>SYSBACK FAILED BACKUP AND PROBLEM LOG LIST</FONT></H1>" >> $htffile
	print "<H3><FONT face=verdana,arial,helvetica size=-1>DATE: `date` </FONT></H3>" >> $htffile
	print "<HR>" >> $htffile

}


#((number=1))
function get_client_sysbkup_log
{
	## Getting sysback .server cfg file from client and it sysback log ##
	for LINE in $(cat $CLIENT_LIST)
	do
		if [ -z $LINE ]; then
			break
		fi
		rhost_long="$LINE"
		 ping -c 2 -i 3 $rhost_long
		 if [[ $? = 0 ]]; then
		  /usr/local/scripts/sysback/servsftp  $rhost_long  1>>$LOGFILE 2>>$LOGFILE
			if [ $? -eq 1 ]; then
				print "Problem while accessing $rhost_long for .server file" > $DATA_WEB_LOG_DIR/$rhost_long.sysbkup.kshlog
			fi
		 fi
 	done 
}

function gathering_sysback_client_log_from_bk_servers
{
	echo "Going to the sysback servers for data"
	for SERVER in $(echo $SYSB_SERVERS)
	do
		/usr/bin/sftp -b /home/ossadmin/bgetlogsftp $SERVER 
	done
}



function sysback_client_backup_status
{
	HOST_TMP=$1
	result1=none
	result2=none
	result3=none

	## Determine sysback client backup status ##
  	if [ -f $DATA_WEB_LOG_DIR/$HOST_TMP.sysbkup.kshlog ]; then
       		result1=`cat $DATA_WEB_LOG_DIR/$HOST_TMP.sysbkup.kshlog | grep FAILURE: | /usr/bin/awk '{print $1}`
		result2=`cat $DATA_WEB_LOG_DIR/$HOST_TMP.sysbkup.kshlog | grep SUCCESS: | /usr/bin/awk '{print $1}`  
		result3=`cat $DATA_WEB_LOG_DIR/$HOST_TMP.sysbkup.kshlog | grep WARNING: | /usr/bin/awk '{print $1}`
		rundate=`cat $DATA_WEB_LOG_DIR/$HOST_TMP.sysbkup.kshlog | grep "Start date"`
	else
		print "Client $HOST_TMP sysback backup did not generate $HOST_TMP.sysbkup.kshlog " >> $DATA_WEB_LOG_DIR/$HOST_TMP.sysbkup.kshlog
		if [ "$server" != "none" ]; then
			print "$HOST_TMP maybe not be configured correctly in crontab on sysback $server" >> $DATA_WEB_LOG_DIR/$HOST_TMP.sysbkup.kshlog 
		fi
  	fi
	if [ "$result1" = "FAILURE:" ]; then
		status="FAILURE"
	fi
	if [ "$result3" = "WARNING:" ]; then
		status="WARNING"
	fi
	if [ "$result2" = "SUCCESS:" ]; then
		status="SUCCESS"
	fi
	
	print "$status"
  	if [ "$status" != "SUCCESS" ]; then
		## Creating Failed html file ##
  		echo "$part0" >>$ffile
  		echo "$part1$client$part2" >>$ffile
  		echo "$part1$server$part2" >>$ffile
  		echo "$part1$status$part2" >>$ffile
  		echo "$part1$rundate$part2" >>$ffile
		echo "$part4$HOST_TMP.sysbkup.kshlog$part5" >>$ffile
  		echo "$part3" >>$ffile
  	else
		## Creating Success html file ##
		echo "$part0" >>$RESULT_LOG
       		echo "$part1$client$part2" >>$RESULT_LOG
       		echo "$part1$server$part2" >>$RESULT_LOG
       		echo "$part1$status$part2" >>$RESULT_LOG
       		echo "$part1$rundate$part2" >>$RESULT_LOG
       		echo "$part4$HOST_TMP.sysbkup.kshlog$part5" >>$RESULT_LOG
		echo "$part4$HOST_TMP.tsmarch.txt$part6" >>$RESULT_LOG
		echo "/usr/tivoli/tsm/client/ba/bin/dsmc retr -replace=yes  /sysbackfs/SB.$HOST_TMP.*" >/data/WEB/docs_private/uds_internal/pp/sysback/logs/$HOST_TMP.restore_itsm.ksh
       		echo "$part3" >>$RESULT_LOG
  	fi

       	if [ "$status" = "FAILURE" ]; then
		((fcount=fcount+1))
  	fi
  	if [ "$status" = "WARNING" ]; then	
		((scount=scount+1))
  	fi
  	if [ "$status" = "SUCCESS" ]; then
		((scount=scount+1))
  	fi
  	if [ "$status" = "unknown" ]; then
		((ucount=ucount+1))
  	fi

}

function creating_final_html
{

	((tcount=scount+ncount+fcount+ucount))
	# combine the RESULT_LOG html file together
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup completed: $scount</b></FONT></div>" >> $htfile
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup failed: $fcount</b></FONT></div>" >> $htfile
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup unknown: $ucount</b></FONT></div>" >> $htfile
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup not setup: $ncount</b></FONT></div>" >> $htfile
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup check: $tcount</b></FONT></div>" >> $htfile
	print "<HR>" >> $htfile
	print "<table border=2 cellspacing=2 cellpadding=2>" >>$htfile  
	print "<tr><b>" >>$htfile                                       
	print "<td><b>CLIENT</b></td>" >>$htfile
	print "<td><b>SERVER</b></td>" >>$htfile
	print "<td><b>STATUS</b></td>" >>$htfile
	print "<td><b>DATE</b></td>" >>$htfile
	print "<td><b>LOGS</b></td>" >>$htfile
	print "<td><b>LOGS</b></td>" >>$htfile
	print "<td><b>RESTORE</b></td>" >>$htfile
	cat $RESULT_LOG >> $htfile
	print "</tr>" >> $htfile
	print "</table>" >> $htfile
	print "</BODY>" >> $htfile
	print "</HTML>" >> $htfile
	
	# combine the RESULT_LOG and html together for failures
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup Completed: $scount</b></FONT></div>" >> $htffile
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup failed: $fcount</b></FONT></div>" >> $htffile
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup unknown: $ucount</b></FONT></div>" >> $htffile
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup Not Setup: $ncount</b></FONT></div>" >> $htffile
	print "<div ALIGN=RIGHT><FONT face=verdana,arial,helvetica size=2><b>Total backup check: $tcount</b></FONT></div>" >> $htffile
	print "<HR>" >> $htffile
	print "<table border=2 cellspacing=2 cellpadding=2>" >>$htffile
	print "<tr><b>" >>$htffile
	print "<td><b>CLIENT</b></td>" >>$htffile
	print "<td><b>SERVER</b></td>" >>$htffile
	print "<td><b>STATUS</b></td>" >>$htffile
	print "<td><b>DATE</b></td>" >>$htffile
	print "<td><b>LOGS</b></td>" >>$htffile
	cat $ffile >> $htffile
	print "</tr></table>" >> $htffile

	# print the ending of the failed html file
	print "</BODY>" >> $htffile
	print "</HTML>" >> $htffile
}




#########  MAIN #########
variables_init
create_html
get_client_sysbkup_log
gathering_sysback_client_log_from_bk_servers

for LINE in $(cat $CLIENT_LIST)
do     
	if [ -z $LINE ]; then
		break
	fi
                                                
	client=`echo $LINE |cut -f 1 -d .`
 	rhost_long="$client" 
	## initiate Variables ## 
  	server="none"
  	rundate="unknown"
	status="unknown"

	## Determine if sysback client is configured ##
  	if [ -f $DATA_WEB_LOG_DIR/$rhost_long.servers ]; then
  		server=`cat $DATA_WEB_LOG_DIR/$rhost_long.servers | /usr/bin/awk '{print $1}`
		status="unknown"

		sysback_client_backup_status $rhost_long
  	else
		status="Not-Configured"
		## Creating Failed html file ##
        	echo "$part0" >>$ffile
        	echo "$part1$client$part2" >>$ffile
        	echo "$part1$server$part2" >>$ffile
        	echo "$part1$status$part2" >>$ffile
        	echo "$part1$(date)$part2" >>$ffile
        	echo "$part4$rhost_long.sysbkup.kshlog$part5" >>$ffile
        	echo "$part3" >>$ffile
		print "$rhost_long is $status" >> $DATA_WEB_LOG_DIR/$rhost_long.sysbkup.kshlog

      		((ncount=ncount+1))
  	fi

done 

creating_final_html

### copy file from /usr/local/scripts/sysback to ktazd216 web server sysback directory #########
cp /usr/local/scripts/sysback/result.html /data/WEB/docs_private/uds_internal/pp/sysback/sysbresult.html
sleep 3
cp /usr/local/scripts/sysback/failed.html /data/WEB/docs_private/uds_internal/pp/sysback/sysbfailed.html
sleep 3

exit 0
